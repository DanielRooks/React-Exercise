{"version":3,"sources":["components/MemberBalances.js","components/CreditMember.js","components/BalanceSummary.js","components/InvoiceOverview.js","components/DraftInvoice.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","class","to","activeStyle","color","exact","id","MemberBalances","props","openMemberHistory","event","preventDefault","setState","selectedMember","buttonClicked","closeMemberHistory","onChangeOrder","target","value","membersSorted","members","sort","a","balance","state","blockFire","blockFlood","blockPower","blockMedical","blockLow","blockMedium","blockHigh","blockCritical","bind","this","totalCredit","totalDebit","i","length","j","credit","amount","debit","displayedData","filter","post","problem","priority","onClick","src","image","alt","name","content","map","message","onChange","type","for","index","key","React","Component","CreditMember","submitSelected","push","selectedAmount","selectedMessage","formSubmitted","selectMember","selectAmount","selectMessage","onSubmit","BalanceSummary","high_low","totalCreditTally","totalDebitTally","creditTransactions","debitTransactions","InvoiceOverview","checked","fireChangeState","floodChangeState","powerChangeState","medicalChangeState","lowChangeState","mediumChangeState","highChangeState","criticalChangeState","DraftInvoice","invoices","names","selectedMembers","expenses","invoiceExpenses","selectMembers","submitExpense","includes","socket","io","Home","App","incrementId","on","console","log","data","path","component","render","location","Error","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.1a301f0f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './../App.css';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\n\r\nfunction NavigationBar() {\r\n  return (\r\n    <div>\r\n        <h1>\r\n          <div class = \"row page-links-row\">\r\n            <div class = \"col page-links-bar\">\r\n              <NavLink to=\"/\" class = \"page-link\" activeStyle={{ color: 'coral' }} exact={true} id = \"nav\">Home</NavLink>\r\n            </div>\r\n            <div class = \"col page-links-bar\">\r\n              <NavLink to=\"/\" class = \"page-link\" activeStyle={{ color: 'coral' }} exact={true} id = \"nav\">Back</NavLink>\r\n            </div>\r\n          </div>\r\n        </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass MemberBalances extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        blockFire: false,\r\n        blockFlood: false,\r\n        blockPower: false,\r\n        blockMedical: false,\r\n  \r\n        blockLow: false,\r\n        blockMedium: false,\r\n        blockHigh: false,\r\n        blockCritical: false,\r\n\r\n        selectedMember: this.props.selectedMember,\r\n        buttonClicked: false,\r\n\r\n        membersSorted: this.props.members\r\n      };\r\n\r\n      this.openMemberHistory = this.openMemberHistory.bind(this);\r\n      this.closeMemberHistory = this.closeMemberHistory.bind(this);\r\n    }\r\n  \r\n    fireChangeState() {this.setState({blockFire: !this.state.blockFire});}\r\n    floodChangeState() {this.setState({blockFlood: !this.state.blockFlood});}\r\n    powerChangeState() {this.setState({blockPower: !this.state.blockPower});}\r\n    medicalChangeState() {this.setState({blockMedical: !this.state.blockMedical});}\r\n  \r\n    lowChangeState() {this.setState({blockLow: !this.state.blockLow});}\r\n    mediumChangeState() {this.setState({blockMedium: !this.state.blockMedium});}\r\n    highChangeState() {this.setState({blockHigh: !this.state.blockHigh});}\r\n    criticalChangeState() {this.setState({blockCritical: !this.state.blockCritical});}\r\n\r\n    openMemberHistory = (event, id) => {\r\n      event.preventDefault();\r\n      this.setState({selectedMember: id});\r\n      this.setState({buttonClicked: true});\r\n    }\r\n\r\n    closeMemberHistory = (event) => {\r\n      event.preventDefault();\r\n      this.setState({buttonClicked: false});\r\n    }\r\n\r\n    onChangeOrder = (event) => {\r\n      event.preventDefault();\r\n      if (event.target.value == \"idHigh\"){\r\n        this.setState({membersSorted: this.props.members.sort(({ id: a }, { id: b }) => b - a)});\r\n      } else if (event.target.value == \"idLow\"){\r\n        this.setState({membersSorted: this.props.members.sort(({ id: a }, { id: b }) => a - b)});\r\n      } else if (event.target.value == \"balanceHigh\"){\r\n        this.setState({membersSorted: this.props.members.sort(({ balance: a }, { balance: b }) => b - a)});\r\n      } else if (event.target.value == \"balanceLow\"){\r\n        this.setState({membersSorted: this.props.members.sort(({ balance: a }, { balance: b }) => a - b)});\r\n      }\r\n    }\r\n  \r\n    render () {\r\n\r\n      var totalCredit = 0;\r\n      var totalDebit = 0;\r\n      for (var i = 0; i < this.props.members.length; i++) {\r\n        for (var j = 0; j < this.props.members[i].credit.length; j++) {\r\n          totalCredit += this.props.members[i].credit[j].amount;\r\n        }\r\n        for (var j = 0; j < this.props.members[i].debit.length; j++) {\r\n          totalDebit += this.props.members[i].debit[j].amount;\r\n        }\r\n\r\n        this.props.members[i].balance = totalDebit - totalCredit;\r\n\r\n        totalCredit = 0;\r\n        totalDebit = 0;\r\n      }\r\n\r\n      var displayedData = this.props.members;\r\n  \r\n      if (this.state.blockFire) displayedData = displayedData.filter(post => !(post.problem === \"Fire\"));\r\n      if (this.state.blockFlood) displayedData = displayedData.filter(post => !(post.problem === \"Flood\"));\r\n      if (this.state.blockPower) displayedData = displayedData.filter(post => !(post.problem === \"Power\"));\r\n      if (this.state.blockMedical) displayedData = displayedData.filter(post => !(post.problem === \"Medical\"));\r\n  \r\n      if (this.state.blockLow) displayedData = displayedData.filter(post => !(post.priority === \"Low\"));\r\n      if (this.state.blockMedium) displayedData = displayedData.filter(post => !(post.priority === \"Medium\"));\r\n      if (this.state.blockHigh) displayedData = displayedData.filter(post => !(post.priority === \"High\"));\r\n      if (this.state.blockCritical) displayedData = displayedData.filter(post => !(post.priority === \"Critical\"));\r\n\r\n      if (this.state.buttonClicked === true) {\r\n        return(\r\n          <div>\r\n            <div>\r\n              <h1>\r\n                <div class = \"row page-links-row\">\r\n                  <div class = \"col page-links-bar\">\r\n                    <NavLink to=\"/\" class = \"page-link\" activeStyle={{ color: 'coral' }} exact={true} id = \"nav\">Home</NavLink>\r\n                  </div>\r\n                  <div class = \"col page-links-bar\">\r\n                    <NavLink to=\"/MemberBalances\" class = \"page-link\" activeStyle={{ color: 'coral' }} exact={true} id = \"nav\" onClick={(event) => this.closeMemberHistory(event)}>Back</NavLink>\r\n                  </div>\r\n                </div>\r\n              </h1>\r\n            </div>\r\n            <div class = \"row\" id = \"live-row-selected\">\r\n              <div class = \"col\" id = \"live-col-feed\">\r\n                  <div id = \"whole-post-selected\">\r\n                      <div><br/><br/></div>\r\n                      <div class = \"row\" id = \"live-row-feed\">\r\n                          <div class = \"col\" id = \"profile-image\">\r\n                              <img id = \"profile-photo\" src={this.state.membersSorted[this.state.selectedMember].image} alt=\"{name}\" /> <br />\r\n                          </div>\r\n                      </div>\r\n                      <div class = \"row\" id = \"live-row-feed\">\r\n                          <div class = \"col\" id = \"profile-info\">\r\n                              <b>{this.state.membersSorted[this.state.selectedMember].name} <br /></b>\r\n                              Balance: {this.state.membersSorted[this.state.selectedMember].balance} <br />\r\n                              Problem: {this.state.membersSorted[this.state.selectedMember].problem} <br />\r\n                              Priority: {this.state.membersSorted[this.state.selectedMember].priority} <br />\r\n                          </div>\r\n                      </div>\r\n                      <div class = \"row\" id = \"live-row-feed\">\r\n                          <div class = \"col\" id = \"profile-msg\">\r\n                              {this.state.membersSorted[this.state.selectedMember].content} <br /> <br /> <br /> <br />\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  <div id = \"whole-post-selected\">\r\n                      <div><br/><br/><br /></div>\r\n                      <div class = \"row\" id = \"live-row-feed\">\r\n                          <div class = \"col\" id = \"profile-info\">\r\n                              <b>Debit List:<br /><br /></b>\r\n                              {this.state.membersSorted[this.state.selectedMember].debit.map(\r\n                              ({amount,message}) =>\r\n                              <div>\r\n                                <div id = \"transaction-listing\">\r\n                                  <b>Transaction Amount:</b>{\" \" + amount}<br /><br />\r\n                                  <b>Transaction Description:</b><br />{\" \" + message}<br />\r\n                                </div><br />\r\n                              </div>\r\n                              )} <br /><br /><br /><br />\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  <div id = \"whole-post-selected\">\r\n                      <div><br/><br/><br /></div>\r\n                      <div class = \"row\" id = \"live-row-feed\">\r\n                          <div class = \"col\" id = \"profile-info\">\r\n                              <b>Credit List:<br /><br /></b>\r\n                              {this.state.membersSorted[this.state.selectedMember].credit.map(\r\n                              ({amount,message}) =>\r\n                              <div>\r\n                                <div id = \"transaction-listing\">\r\n                                  <b>Transaction Amount:</b>{\" \" + amount}<br /><br />\r\n                                  <b>Transaction Description:</b><br />{\" \" + message}<br />\r\n                                </div><br />\r\n                              </div>\r\n                              )} <br /><br /><br /><br />\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n  \r\n      return (\r\n        <div>\r\n            <NavigationBar />\r\n            <div class = \"row\" id = \"live-row\">\r\n            <div class = \"col\" id = \"live-col-check\">\r\n              <div onChange={this.onChangeOrder}>\r\n                <div class = \"row\" id = \"live-row-check\">\r\n                  <h3>Sort by ID</h3>\r\n                </div>\r\n                  <div class = \"row\" id = \"live-row-check\">\r\n                    <input type=\"radio\" id=\"floodDisplayed\" value='idHigh' name=\"orderGroup\"/>\r\n                    <label for=\"floodDisplayed\">High - Low</label>\r\n                  </div>\r\n                  <div class = \"row\" id = \"live-row-check\">\r\n                    <input type=\"radio\" id=\"powerDisplayed\" value='idLow' name=\"orderGroup\"/>\r\n                    <label for=\"powerDisplayed\">Low - High</label>\r\n                  </div>\r\n                  <div class = \"row\" id = \"live-row-check\">\r\n                    <h3>Sort by Balance</h3>\r\n                  </div>\r\n                  <div class = \"row\" id = \"live-row-check\">\r\n                    <input type=\"radio\" id=\"mediumDisplayed\" value='balanceHigh' name=\"orderGroup\"/>\r\n                    <label for=\"mediumDisplayed\">High - Low</label>\r\n                  </div>\r\n                  <div class = \"row\" id = \"live-row-check\">\r\n                    <input type=\"radio\" id=\"highDisplayed\" value='balanceLow' name=\"orderGroup\"/>\r\n                    <label for=\"highDisplayed\">Low - High</label>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n            <div class = \"col\" id = \"live-col-feed\">\r\n                {this.state.membersSorted.map( \r\n                ({name,image,content,problem,priority,debit,credit,balance,id}, index) => \r\n                <div id = \"whole-post\" key={id}>\r\n                    <div><br/><br/></div>\r\n                    <div class = \"row\" id = \"live-row-feed\">\r\n                      <div class = \"col\" id = \"profile-image\">\r\n                          <img id = \"profile-photo\" src={image} alt=\"{name}\" /> <br />\r\n                      </div>\r\n                    </div>\r\n                    <div class = \"row\" id = \"live-row-feed\">\r\n                      <div class = \"col\" id = \"profile-info\">\r\n                          <b>{name} <br /></b>\r\n                          Balance: {balance} <br />\r\n                          Problem: {problem} <br />\r\n                          Priority: {priority} <br />\r\n                      </div>\r\n                    </div>\r\n                    <div class = \"row\" id = \"live-row-feed\">\r\n                      <div class = \"col\" id = \"profile-msg\">\r\n                        <button onClick={(event) => this.openMemberHistory(event, index)}>\r\n                          Open History\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div class = \"row\" id = \"live-row-feed\">\r\n                      <div class = \"col\" id = \"profile-msg\">\r\n                          {content} <br /> <br /> <br /> <br />\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n                )}\r\n            </div>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  export default MemberBalances;","import React, {useCallback} from 'react';\r\nimport './../App.css';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\n\r\nfunction NavigationBar() {\r\n    return (\r\n      <div>\r\n          <h1>\r\n            <div class = \"row page-links-row\">\r\n              <div class = \"col page-links-bar\">\r\n                <NavLink to=\"/\" class = \"page-link\" activeStyle={{ color: 'coral' }} exact={true} id = \"nav\">Home</NavLink>\r\n              </div>\r\n              <div class = \"col page-links-bar\">\r\n                <NavLink to=\"/\" class = \"page-link\" activeStyle={{ color: 'coral' }} exact={true} id = \"nav\">Back</NavLink>\r\n              </div>\r\n            </div>\r\n          </h1>\r\n      </div>\r\n    );\r\n  };\r\n\r\nclass CreditMember extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            members: this.props.members,\r\n            selectedMember: \"none\",\r\n            selectedAmount: 0,\r\n            selectedMessage: \"none\",\r\n            formSubmitted: false\r\n        };\r\n        this.selectMember = this.selectMember.bind(this);\r\n        this.selectAmount = this.selectAmount.bind(this);\r\n        this.selectMessage = this.selectMessage.bind(this);\r\n        this.submitSelected = this.submitSelected.bind(this);\r\n    }\r\n\r\n    selectMember(event) {\r\n        this.setState({selectedMember: event.target.value});\r\n    }\r\n\r\n    selectAmount(event) {\r\n        this.setState({selectedAmount: event.target.value});\r\n    }\r\n\r\n    selectMessage(event) {\r\n        this.setState({selectedMessage: event.target.value});\r\n    }\r\n\r\n    submitSelected = (event) => {\r\n        event.preventDefault();\r\n        for (var i = 0; i < this.state.members.length; i++) {\r\n            if(this.state.members[i].id == this.state.selectedMember){\r\n                this.state.members[i].credit.push({\r\n                    amount: this.state.selectedAmount,\r\n                    message: this.state.selectedMessage\r\n                })\r\n            }\r\n        }\r\n        this.setState({formSubmitted: true});\r\n    }\r\n  \r\n    render () {\r\n\r\n        if (this.state.formSubmitted === true) {\r\n            return (<Redirect to='/' />)\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <NavigationBar />\r\n                <h1>Credit Member</h1>\r\n                <form onSubmit={this.submitSelected}>\r\n                    <div class = \"row\" id = \"credit-row\">\r\n                        <div class = \"col\" id = \"credit-col\">\r\n                            <div class = \"row\" id = \"credit-row-label\">\r\n                                Select Member: {this.state.selectedMember}\r\n                            </div>\r\n                            <div class = \"row\" id = \"credit-row-entry\">\r\n                                <select value={this.state.value} onChange={this.selectMember}>\r\n                                    <option value={-1}>Select</option>\r\n                                    {this.props.members.map( \r\n                                    ({name,id}) => \r\n                                        <option value={id} key={id}>{name}</option>\r\n                                    )};\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class = \"row\" id = \"credit-row\">\r\n                        <div class = \"col\" id = \"credit-col\">\r\n                            <div class = \"row\" id = \"credit-row-label\">\r\n                                Enter Value: {this.state.selectedAmount}\r\n                            </div>\r\n                            <div class = \"row\" id = \"credit-row-entry\">\r\n                                <input type=\"text\" value={this.state.value} onChange={this.selectAmount} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class = \"row\" id = \"credit-row\">\r\n                        <div class = \"col\" id = \"credit-col\">\r\n                            <div class = \"row\" id = \"credit-row-label\">\r\n                                Message: {this.state.selectedMessage}\r\n                            </div>\r\n                            <div class = \"row\" id = \"credit-row-entry\">\r\n                                <textarea value={this.state.value} onChange={this.selectMessage} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class = \"row\" id = \"credit-row\">\r\n                        <div class = \"col\" id = \"credit-col\">\r\n                            <div class = \"row\" id = \"credit-row-submit\">\r\n                                <input type=\"submit\" value=\"Submit\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  export default CreditMember;","import React from 'react';\r\nimport './../App.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction NavigationBar() {\r\n    return (\r\n      <div>\r\n          <h1>\r\n            <div class = \"row page-links-row\">\r\n              <div class = \"col page-links-bar\">\r\n                <NavLink to=\"/\" class = \"page-link\" activeStyle={{ color: 'coral' }} exact={true} id = \"nav\">Home</NavLink>\r\n              </div>\r\n              <div class = \"col page-links-bar\">\r\n                <NavLink to=\"/\" class = \"page-link\" activeStyle={{ color: 'coral' }} exact={true} id = \"nav\">Back</NavLink>\r\n              </div>\r\n            </div>\r\n          </h1>\r\n      </div>\r\n    );\r\n  };\r\n\r\nclass BalanceSummary extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n        members: this.props.members,\r\n        totalCredit: 0,\r\n        totalDebit: 0,\r\n\r\n        high_low: false,\r\n\r\n        blockFire: false,\r\n        blockFlood: false,\r\n        blockPower: false,\r\n        blockMedical: false,\r\n  \r\n        blockLow: false,\r\n        blockMedium: false,\r\n        blockHigh: false,\r\n        blockCritical: false\r\n      }\r\n    }\r\n  \r\n    fireChangeState() {this.setState({blockFire: !this.state.blockFire});}\r\n    floodChangeState() {this.setState({blockFlood: !this.state.blockFlood});}\r\n    powerChangeState() {this.setState({blockPower: !this.state.blockPower});}\r\n    medicalChangeState() {this.setState({blockMedical: !this.state.blockMedical});}\r\n  \r\n    lowChangeState() {this.setState({blockLow: !this.state.blockLow});}\r\n    mediumChangeState() {this.setState({blockMedium: !this.state.blockMedium});}\r\n    highChangeState() {this.setState({blockHigh: !this.state.blockHigh});}\r\n    criticalChangeState() {this.setState({blockCritical: !this.state.blockCritical});}\r\n\r\n    onChangeOrder = (event) => {\r\n      event.preventDefault();\r\n      if (event.target.value == \"amountHigh\"){\r\n        this.setState({high_low: true});\r\n      } else {\r\n        this.setState({high_low: false});\r\n      }\r\n    }\r\n  \r\n    render () {\r\n\r\n      var totalCreditTally = 0;\r\n      var totalDebitTally = 0;\r\n      var creditTransactions = [];\r\n      var debitTransactions = [];\r\n      for (var i = 0; i < this.props.members.length; i++) {\r\n        for (var j = 0; j < this.props.members[i].credit.length; j++) {\r\n            totalCreditTally += this.props.members[i].credit[j].amount;\r\n            creditTransactions.push({name: this.props.members[i].name, amount: this.props.members[i].credit[j].amount, message: this.props.members[i].credit[j].message});\r\n        }\r\n        for (var j = 0; j < this.props.members[i].debit.length; j++) {\r\n            totalDebitTally += this.props.members[i].debit[j].amount;\r\n            debitTransactions.push({name: this.props.members[i].name, amount: this.props.members[i].debit[j].amount, message: this.props.members[i].debit[j].message});\r\n        }\r\n      }\r\n\r\n      if (this.state.high_low){\r\n        creditTransactions = creditTransactions.sort(({ amount: a }, { amount: b }) => b - a);\r\n        debitTransactions = debitTransactions.sort(({ amount: a }, { amount: b }) => b - a);\r\n      } else {\r\n        creditTransactions = creditTransactions.sort(({ amount: a }, { amount: b }) => a - b);\r\n        debitTransactions = debitTransactions.sort(({ amount: a }, { amount: b }) => a - b);\r\n      }\r\n\r\n      var displayedData = this.props.members;\r\n  \r\n      if (this.state.blockFire) displayedData = displayedData.filter(post => !(post.problem === \"Fire\"));\r\n      if (this.state.blockFlood) displayedData = displayedData.filter(post => !(post.problem === \"Flood\"));\r\n      if (this.state.blockPower) displayedData = displayedData.filter(post => !(post.problem === \"Power\"));\r\n      if (this.state.blockMedical) displayedData = displayedData.filter(post => !(post.problem === \"Medical\"));\r\n  \r\n      if (this.state.blockLow) displayedData = displayedData.filter(post => !(post.priority === \"Low\"));\r\n      if (this.state.blockMedium) displayedData = displayedData.filter(post => !(post.priority === \"Medium\"));\r\n      if (this.state.blockHigh) displayedData = displayedData.filter(post => !(post.priority === \"High\"));\r\n      if (this.state.blockCritical) displayedData = displayedData.filter(post => !(post.priority === \"Critical\"));\r\n  \r\n      return (\r\n        <div>\r\n            <NavigationBar />\r\n            <div class = \"row\" id = \"live-row\">\r\n                <h1>Total Credit: {totalDebitTally}</h1>\r\n                <h1>Overall Balance: {totalDebitTally - totalCreditTally}</h1>\r\n                <h1>Total Debit: {totalCreditTally}</h1>\r\n            </div>\r\n            <div class = \"row\" id = \"live-row\">\r\n                <div class = \"col\" id = \"live-col-check\">\r\n                <div onChange={this.onChangeOrder}>\r\n                  <div class = \"row\" id = \"live-row-check\">\r\n                    <h3>Sort by ID</h3>\r\n                  </div>\r\n                  <div class = \"row\" id = \"live-row-check\">\r\n                    <input type=\"radio\" id=\"floodDisplayed\" value='amountHigh' name=\"orderGroup\"/>\r\n                    <label for=\"floodDisplayed\">High - Low</label>\r\n                  </div>\r\n                  <div class = \"row\" id = \"live-row-check\">\r\n                    <input type=\"radio\" id=\"powerDisplayed\" value='amountLow' name=\"orderGroup\"/>\r\n                    <label for=\"powerDisplayed\">Low - High</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n                <div class = \"col\" id = \"live-col-feed\">\r\n                  <h2>Debit Transactions:</h2>\r\n                    <div id = \"whole-post-balance\">\r\n                        <div class = \"row\" id = \"live-row-feed\">\r\n                        <div class = \"col\" id = \"profile-info\">\r\n                            {debitTransactions.map(\r\n                            ({name,amount,message}) =>\r\n                              <div>\r\n                                <div id = \"transaction-listing\">\r\n                                  <b>Member Name:</b>{\" \" + name}<br /><br />\r\n                                  <b>Transaction Amount:</b>{\" \" + amount}<br /><br />\r\n                                  <b>Transaction Description:</b><br />{\" \" + message}<br />\r\n                                </div><br />\r\n                              </div>\r\n                            )}\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <h2>Credit Transactions:</h2>\r\n                    <div id = \"whole-post-balance\">\r\n                        <div class = \"row\" id = \"live-row-feed\">\r\n                        <div class = \"col\" id = \"profile-info\">\r\n                            {creditTransactions.map(\r\n                            ({name, amount,message}) =>\r\n                              <div>\r\n                                <div id = \"transaction-listing\">\r\n                                  <b>Member Name:</b>{\" \" + name}<br /><br />\r\n                                  <b>Transaction Amount:</b>{\" \" + amount}<br /><br />\r\n                                  <b>Transaction Description:</b><br />{\" \" + message}<br />\r\n                                </div><br />\r\n                              </div>\r\n                            )}\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  export default BalanceSummary;","import React from 'react';\r\nimport './../App.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction NavigationBar() {\r\n    return (\r\n      <div>\r\n          <h1>\r\n            <div class = \"row page-links-row\">\r\n              <div class = \"col page-links-bar\">\r\n                <NavLink to=\"/\" class = \"page-link\" activeStyle={{ color: 'coral' }} exact={true} id = \"nav\">Home</NavLink>\r\n              </div>\r\n              <div class = \"col page-links-bar\">\r\n                <NavLink to=\"/\" class = \"page-link\" activeStyle={{ color: 'coral' }} exact={true} id = \"nav\">Back</NavLink>\r\n              </div>\r\n            </div>\r\n          </h1>\r\n      </div>\r\n    );\r\n  };\r\n\r\nclass InvoiceOverview extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        blockFire: false,\r\n        blockFlood: false,\r\n        blockPower: false,\r\n        blockMedical: false,\r\n  \r\n        blockLow: false,\r\n        blockMedium: false,\r\n        blockHigh: false,\r\n        blockCritical: false\r\n      }\r\n    }\r\n  \r\n    fireChangeState() {this.setState({blockFire: !this.state.blockFire});}\r\n    floodChangeState() {this.setState({blockFlood: !this.state.blockFlood});}\r\n    powerChangeState() {this.setState({blockPower: !this.state.blockPower});}\r\n    medicalChangeState() {this.setState({blockMedical: !this.state.blockMedical});}\r\n  \r\n    lowChangeState() {this.setState({blockLow: !this.state.blockLow});}\r\n    mediumChangeState() {this.setState({blockMedium: !this.state.blockMedium});}\r\n    highChangeState() {this.setState({blockHigh: !this.state.blockHigh});}\r\n    criticalChangeState() {this.setState({blockCritical: !this.state.blockCritical});}\r\n  \r\n    render () {\r\n\r\n      var displayedData = this.props.members;\r\n  \r\n      if (this.state.blockFire) displayedData = displayedData.filter(post => !(post.problem === \"Fire\"));\r\n      if (this.state.blockFlood) displayedData = displayedData.filter(post => !(post.problem === \"Flood\"));\r\n      if (this.state.blockPower) displayedData = displayedData.filter(post => !(post.problem === \"Power\"));\r\n      if (this.state.blockMedical) displayedData = displayedData.filter(post => !(post.problem === \"Medical\"));\r\n  \r\n      if (this.state.blockLow) displayedData = displayedData.filter(post => !(post.priority === \"Low\"));\r\n      if (this.state.blockMedium) displayedData = displayedData.filter(post => !(post.priority === \"Medium\"));\r\n      if (this.state.blockHigh) displayedData = displayedData.filter(post => !(post.priority === \"High\"));\r\n      if (this.state.blockCritical) displayedData = displayedData.filter(post => !(post.priority === \"Critical\"));\r\n  \r\n      return (\r\n        <div>\r\n            <NavigationBar />\r\n            <div class = \"row\" id = \"live-row\">\r\n            <div class = \"col\" id = \"live-col-check\">\r\n                <div class = \"row\" id = \"live-row-check\">\r\n                <h3>Problem Type</h3>\r\n                </div>\r\n                <div class = \"row\" id = \"live-row-check\">\r\n                <input type=\"checkbox\" id=\"fireDisplayed\" checked={!this.state.blockFire} onChange={this.fireChangeState.bind(this)}/>\r\n                <label for=\"fireDisplayed\">Fire</label>\r\n                </div>\r\n                <div class = \"row\" id = \"live-row-check\">\r\n                <input type=\"checkbox\" id=\"floodDisplayed\" checked={!this.state.blockFlood} onChange={this.floodChangeState.bind(this)}/>\r\n                <label for=\"floodDisplayed\">Flood</label>\r\n                </div>\r\n                <div class = \"row\" id = \"live-row-check\">\r\n                <input type=\"checkbox\" id=\"powerDisplayed\" checked={!this.state.blockPower} onChange={this.powerChangeState.bind(this)}/>\r\n                <label for=\"powerDisplayed\">Power</label>\r\n                </div>\r\n                <div class = \"row\" id = \"live-row-check\">\r\n                <input type=\"checkbox\" id=\"medicalDisplayed\" checked={!this.state.blockMedical} onChange={this.medicalChangeState.bind(this)}/>\r\n                <label for=\"medicalDisplayed\">Medical</label>\r\n                </div>\r\n                <div class = \"row\" id = \"live-row-check\">\r\n                <h3>Priority Level</h3>\r\n                </div>\r\n                <div class = \"row\" id = \"live-row-check\">\r\n                <input type=\"checkbox\" id=\"lowDisplayed\" checked={!this.state.blockLow} onChange={this.lowChangeState.bind(this)}/>\r\n                <label for=\"lowDisplayed\">Low</label>\r\n                </div>\r\n                <div class = \"row\" id = \"live-row-check\">\r\n                <input type=\"checkbox\" id=\"mediumDisplayed\" checked={!this.state.blockMedium} onChange={this.mediumChangeState.bind(this)}/>\r\n                <label for=\"mediumDisplayed\">Medium</label>\r\n                </div>\r\n                <div class = \"row\" id = \"live-row-check\">\r\n                <input type=\"checkbox\" id=\"highDisplayed\" checked={!this.state.blockHigh} onChange={this.highChangeState.bind(this)}/>\r\n                <label for=\"highDisplayed\">High</label>\r\n                </div>\r\n                <div class = \"row\" id = \"live-row-check\">\r\n                <input type=\"checkbox\" id=\"criticalDisplayed\" checked={!this.state.blockCritical} onChange={this.criticalChangeState.bind(this)}/>\r\n                <label for=\"criticalDisplayed\">Critical</label>\r\n                </div>\r\n            </div>\r\n            <div class = \"col\" id = \"live-col-feed\">\r\n                {this.props.members.map( \r\n                ({name,image,content,problem,priority,debit,credit,id}) => \r\n                <div id = \"whole-post\" key={id}>\r\n                    <div><br/><br/></div>\r\n                    <div class = \"row\" id = \"live-row-feed\">\r\n                    <div class = \"col\" id = \"profile-image\">\r\n                        <img id = \"profile-photo\" src={image} alt=\"{name}\" /> <br />\r\n                    </div>\r\n                    </div>\r\n                    <div class = \"row\" id = \"live-row-feed\" key={id}>\r\n                    <div class = \"col\" id = \"profile-info\">\r\n                        <b>{name} <br /></b>\r\n                        Problem: {problem} <br />\r\n                        Priority: {priority} <br />\r\n                        Debit: {debit.map(\r\n                        ({amount,message}) =>\r\n                          amount + \", \" + message + \"\\n\"\r\n                        )} <br />\r\n                        Credit: {credit.map(\r\n                        ({amount,message}) =>\r\n                          amount + \", \" + message + \"\\n\"\r\n                        )} <br />\r\n                    </div>\r\n                    </div>\r\n                    <div class = \"row\" id = \"live-row-feed\">\r\n                    <div class = \"col\" id = \"profile-msg\">\r\n                        {content} <br /> <br /> <br /> <br />\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                )}\r\n            </div>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  export default InvoiceOverview;","import React, {useCallback} from 'react';\r\nimport './../App.css';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\n\r\nfunction NavigationBar() {\r\n    return (\r\n      <div>\r\n          <h1>\r\n            <div class = \"row page-links-row\">\r\n              <div class = \"col page-links-bar\">\r\n                <NavLink to=\"/\" class = \"page-link\" activeStyle={{ color: 'coral' }} exact={true} id = \"nav\">Home</NavLink>\r\n              </div>\r\n              <div class = \"col page-links-bar\">\r\n                <NavLink to=\"/\" class = \"page-link\" activeStyle={{ color: 'coral' }} exact={true} id = \"nav\">Back</NavLink>\r\n              </div>\r\n            </div>\r\n          </h1>\r\n      </div>\r\n    );\r\n  };\r\n\r\nclass DraftInvoice extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            members: this.props.members,\r\n            selectedMembers: [],\r\n            invoiceExpenses: [],\r\n            selectedAmount: 0,\r\n            selectedMessage: \"none\",\r\n            formSubmitted: false\r\n        };\r\n        this.selectMembers = this.selectMembers.bind(this);\r\n        this.selectAmount = this.selectAmount.bind(this);\r\n        this.selectMessage = this.selectMessage.bind(this);\r\n        this.submitSelected = this.submitSelected.bind(this);\r\n        this.submitExpense = this.submitExpense.bind(this);\r\n    }\r\n\r\n    selectMembers(event) {\r\n        if (!this.state.selectedMembers.includes(event.target.value)){\r\n            this.setState({selectedMembers: [...this.state.selectedMembers, event.target.value]});\r\n        }\r\n    }\r\n\r\n    selectAmount(event) {\r\n        this.setState({selectedAmount: event.target.value});\r\n    }\r\n\r\n    selectMessage(event) {\r\n        this.setState({selectedMessage: event.target.value});\r\n    }\r\n\r\n    submitExpense(event) {\r\n        event.preventDefault();\r\n        this.setState({invoiceExpenses: [...this.state.invoiceExpenses, {amount: this.state.selectedAmount, message: this.state.selectedMessage}]});\r\n    }\r\n\r\n    submitSelected = (event) => {\r\n        event.preventDefault();\r\n        this.state.invoices.push({\r\n            names: this.state.selectedMembers,\r\n            expenses: this.state.invoiceExpenses\r\n        })\r\n        this.setState({formSubmitted: true});\r\n    }\r\n  \r\n    render () {\r\n\r\n        if (this.state.formSubmitted === true) {\r\n            return (<Redirect to='/' />)\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <NavigationBar />\r\n                <h1>Draft Invoice</h1>\r\n                <form onSubmit={this.submitSelected}>\r\n                    <div class = \"row\" id = \"credit-row\">\r\n                        <div class = \"col\" id = \"credit-col\">\r\n                            <div class = \"row\" id = \"credit-row-label\">\r\n                                <div class = \"col\"> Selected Members:</div>\r\n                            </div>\r\n                            <div class = \"row\" id = \"credit-row-label\">\r\n                                {this.state.selectedMembers.map((name) =>\r\n                                <div class = \"col\" id = \"member-col\">\r\n                                    {name}\r\n                                </div>\r\n                                )}\r\n                            </div>\r\n                            <div class = \"row\" id = \"credit-row-entry\">\r\n                                <select value={this.state.value} onChange={this.selectMembers}>\r\n                                    <option value={-1}>Select</option>\r\n                                    {this.props.members.map( \r\n                                    ({name,id}) => \r\n                                        <option value={name} key={id}>{name}</option>\r\n                                    )};\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class = \"row\" id = \"credit-row-large\">\r\n                        <div class = \"col\" id = \"credit-col\">\r\n                            <div class = \"row\" id = \"credit-row-label\">\r\n                                Enter Value: {this.state.selectedAmount}\r\n                            </div>\r\n                            <div class = \"row\" id = \"credit-row-entry\">\r\n                                <input type=\"text\" value={this.state.value} onChange={this.selectAmount} />\r\n                            </div>\r\n                            <div class = \"row\" id = \"credit-row-label\">\r\n                                Message: {this.state.selectedMessage}\r\n                            </div>\r\n                            <div class = \"row\" id = \"credit-row-entry\">\r\n                                <textarea value={this.state.value} onChange={this.selectMessage} />\r\n                            </div>\r\n                            <div class = \"row\" id = \"credit-row-entry\">\r\n                                <button>Add Expense</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class = \"row\" id = \"credit-row\">\r\n                        <div class = \"col\" id = \"credit-col\">\r\n                            <div class = \"row\" id = \"credit-row-submit\">\r\n                                <input type=\"submit\" value=\"Submit\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default DraftInvoice;","import React from 'react';\nimport './App.css';\nimport {Route, Switch, NavLink} from 'react-router-dom';\nimport MemberBalances from \"./components/MemberBalances\";\nimport CreditMember from \"./components/CreditMember\";\nimport BalanceSummary from \"./components/BalanceSummary\";\nimport InvoiceOverview from \"./components/InvoiceOverview\";\nimport DraftInvoice from \"./components/DraftInvoice\";\n\n// Install the socket io client using:\n//    npm install socket.io\n//\n// Then import socket io and create a socket:\n//\nimport io from 'socket.io-client';\nconst socket = io('http://localhost:3001');\n//\n// See: https://socket.io/get-started/chat\n//      https://www.npmjs.com/package/socket.io-client\n\nclass Home extends React.Component {\n  render () {\n    return (\n      <div>\n        <NavigationBar />\n        <div class = \"row\" id = \"home-row\">\n          <div class = \"col page-links-bar\">\n            <NavLink to=\"/CreditMember\" class = \"page-link\" activeStyle={{ color: 'coral' }} id = \"nav\">Credit Member</NavLink>\n          </div>\n          <div class = \"col page-links-bar\">\n            <NavLink to=\"/DraftInvoice\" class = \"page-link\" activeStyle={{ color: 'coral' }} id = \"nav\">Draft Invoice</NavLink>\n          </div>\n        </div>\n\n        <div class = \"row\" id = \"home-row\">\n          <div class = \"col\" id = \"home-col\">\n            <NavLink to=\"/BalanceSummary\" class = \"page-link\" activeStyle={{ color: 'coral' }} id = \"nav\">Balance Summary</NavLink>\n          </div>\n        </div>\n        <div class = \"row\" id = \"home-row\">\n          <div class = \"col\" id = \"home-col\">\n            <NavLink to=\"/MemberBalances\" class = \"page-link\" activeStyle={{ color: 'coral' }} id = \"nav\">Member Balances</NavLink>\n          </div>\n        </div>\n        <div class = \"row\" id = \"home-row\">\n          <div class = \"col\" id = \"home-col\">\n            <NavLink to=\"/InvoiceOverview\" class = \"page-link\" activeStyle={{ color: 'coral' }} id = \"nav\">Invoice Overview</NavLink>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nfunction NavigationBar() {\n  return (\n    <div>\n        <h1>\n          <div class = \"row\">\n            <div class = \"col page-links-bar\">\n              <NavLink to=\"/\" class = \"page-link\" activeStyle={{ color: 'coral' }} exact={true} id = \"nav\">Home</NavLink>\n            </div>\n          </div>\n        </h1>\n    </div>\n  );\n};\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {members: [], incrementId: 0, selectedMember: 0, invoices: []};\n\n    // We can setup the event handlers for the messages in the constructor...\n    socket.on('connect', function(){\n\n      console.log(\"Connect....\");\n\n      // When we receive a social media message, call setState and insert \n      // it into the array of posts\n      socket.on('post', \n\n        function(data) {\n\n          // Can uncomment this to see the raw data coming in...\n          // console.log(\"post: \" + JSON.stringify(data));\n\n          // increment the next unique ID, and put post data into the list of \n          // posts... use the '...' syntax to make this insertion easier:\n          // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax \n          this.setState( \n            {members: [...this.state.members,\n                     {name: data.name, \n                      image: data.image, \n                      content: data.content, \n                      problem: data.problem,\n                      priority: data.priority,\n                      debit: data.debit,\n                      credit: data.credit,\n                      id: this.state.incrementId}]\n            ,incrementId: this.state.incrementId + 1} );\n        }.bind(this),);\n        // ^^ Like other event handlers, we bind the callback function to the \n        // component so we can use setState        \n\n    }.bind(this));\n    // ^^ ... And same with the callback function for when a connection is made\n  }\n\n  render() {\n    return (\n      <main>\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/MemberBalances\" render={({location}) => <MemberBalances members={this.state.members} selectedMember={this.state.selectedMember}/>} />\n          <Route path=\"/CreditMember\" render={() => <CreditMember members={this.state.members} />} />\n          <Route path=\"/BalanceSummary\" render={() => <BalanceSummary members={this.state.members} />} />\n          <Route path=\"/InvoiceOverview\" render={() => <InvoiceOverview members={this.state.members} />} />\n          <Route path=\"/DraftInvoice\" render={() => <DraftInvoice members={this.state.members} />} />\n          <Route path=\"/index.html\" component={Home} />\n          <Route component={Error} />\n        </Switch>\n      </main>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}